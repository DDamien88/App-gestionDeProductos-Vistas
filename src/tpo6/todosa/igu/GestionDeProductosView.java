/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package tpo6.todosa.igu;

import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import logica.Categoria;
import logica.Producto;
import static tpo6.todosa.igu.PrincipalView.listaProductos;

/**
 *
 * @author Dami치n
 */
public class GestionDeProductosView extends javax.swing.JInternalFrame {

    private int aux;

    /**
     * Creates new form ListaProducto
     */
    public GestionDeProductosView() {

        initComponents();
        cargarCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTCodigo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTDescripcion = new javax.swing.JTextField();
        jTPrecio = new javax.swing.JTextField();
        jTStock = new javax.swing.JTextField();
        cbRubro = new javax.swing.JComboBox<>();
        jLLupa = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();

        setBackground(new java.awt.Color(102, 102, 102));
        setBorder(null);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Descripci칩n");

        jTCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTCodigoKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Precio");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Rubro");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Stock");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("C칩digo");

        jTPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTPrecioKeyTyped(evt);
            }
        });

        jTStock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTStockKeyTyped(evt);
            }
        });

        jLLupa.setIcon(new javax.swing.ImageIcon("E:\\Lab I\\TPO6-TodoSa\\src\\img\\lupa.png")); // NOI18N
        jLLupa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLLupaMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        jLabel2.setText("Gesti칩n de productos");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel6)
                        .addComponent(jLabel7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTStock, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbRubro, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLLupa)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addComponent(jLLupa))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbRubro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        btnEliminar.setBackground(new java.awt.Color(255, 51, 51));
        btnEliminar.setText("Eliminar");
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnGuardar.setBackground(new java.awt.Color(0, 153, 0));
        btnGuardar.setText("Editar");
        btnGuardar.setEnabled(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnSalir.setBackground(new java.awt.Color(255, 255, 255));
        btnSalir.setForeground(new java.awt.Color(0, 0, 0));
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addComponent(btnNuevo)
                .addGap(18, 18, 18)
                .addComponent(btnGuardar)
                .addGap(30, 30, 30)
                .addComponent(btnEliminar)
                .addGap(18, 18, 18)
                .addComponent(btnSalir)
                .addGap(20, 20, 20))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo)
                    .addComponent(btnEliminar)
                    .addComponent(btnGuardar)
                    .addComponent(btnSalir))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed

        try {
            /*if (jTCodigo.getText().isEmpty() && jTDescripcion.getText().isEmpty() && jTPrecio.getText().isEmpty() && jTStock.getText().isEmpty()) {
                btnGuardar.setEnabled(false);
                btnEliminar.setEnabled(false);
            }*/
            if (jTCodigo.getText().isEmpty() || jTDescripcion.getText().isEmpty() || jTPrecio.getText().isEmpty() || jTStock.getText().isEmpty()) {

                JOptionPane.showMessageDialog(this, "No debe haber campos vac칤os");
            }
            int codigo = Integer.parseInt(jTCodigo.getText());
            if (buscarProductoPorCodigo(codigo, jTDescripcion.getText()) != null) {
                JOptionPane.showMessageDialog(this, "Este producto ya ha sido agregado.");
                return; // Salir del m칠todo si el producto ya existe
            }

            String descripcion = jTDescripcion.getText().toLowerCase();
            double precio = Double.parseDouble(jTPrecio.getText());
            String categoria = cbRubro.getSelectedItem().toString();

            int stock = Integer.parseInt(jTStock.getText());
            //prodRepetido(codigo);
            if (categoria.equalsIgnoreCase("Comestible")) {
                Producto produ = new Producto(codigo, descripcion, precio, stock, Categoria.COMESTIBLE);
                agregarProducto(produ);
                System.out.println("Producto agregado");
                JOptionPane.showMessageDialog(this, "Agregado");
                cbRubro.setSelectedIndex(0);
                btnGuardar.setEnabled(true);
                btnEliminar.setEnabled(true);
                mostrarProductos(produ);
            } else if (categoria.equalsIgnoreCase("Seleccione rubro")) {
                JOptionPane.showMessageDialog(this, "Seleccione tipo de rubro: ");
                return;
            }

            if (categoria.equalsIgnoreCase("Limpieza")) {
                Producto produ = new Producto(codigo, descripcion, precio, stock, Categoria.LIMPIEZA);
                agregarProducto(produ);
                System.out.println("Producto agregado");
                JOptionPane.showMessageDialog(this, "Agregado");
                cbRubro.setSelectedIndex(0);
                btnGuardar.setEnabled(true);
                btnEliminar.setEnabled(true);
                mostrarProductos(produ);
            } else if (categoria.equalsIgnoreCase("Seleccione rubro")) {
                JOptionPane.showMessageDialog(this, "Seleccione tipo de rubro: ");
                return;
            }
            if (categoria.equalsIgnoreCase("Perfumer칤a")) {
                Producto produ = new Producto(codigo, descripcion, precio, stock, Categoria.PERFUMERIA);
                agregarProducto(produ);
                System.out.println("Producto agregado");
                JOptionPane.showMessageDialog(this, "Agregado");
                cbRubro.setSelectedIndex(0);
                btnGuardar.setEnabled(true);
                btnEliminar.setEnabled(true);
                mostrarProductos(produ);
            } else if (categoria.equalsIgnoreCase("Seleccione rubro")) {
                JOptionPane.showMessageDialog(this, "Seleccione tipo de rubro: ");
                return;
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Debe ingresar datos correctos");
        }

    }

    /*private void prodRepetido(int cod) {
        for (Producto listaProducto : listaProductos) {
            if (cod == listaProducto.getCodigo()) {
                JOptionPane.showMessageDialog(this, "칄ste producto ya se encuentra en su stock");
            }
        }
    }*/
    private void agregarProducto(Producto producto) {

        listaProductos.add(producto);

    }

    private void mostrarProductos(Producto producto) {

        for (Producto produ : listaProductos) {
            System.out.println(produ.getDescripcion() + " " + produ.getCodigo() + " - " + produ.getRubro());
        }
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        limpiarCampos();
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        try {
            int codigo = Integer.parseInt(jTCodigo.getText());
            String descripcion = jTDescripcion.getText().toLowerCase();
            double precio = Double.parseDouble(jTPrecio.getText());
            String categoriaStr = cbRubro.getSelectedItem().toString();
            int stock = Integer.parseInt(jTStock.getText());

            Categoria categoria;
            switch (categoriaStr) {
                case "Comestible":
                    categoria = Categoria.COMESTIBLE;
                    break;
                case "Limpieza":
                    categoria = Categoria.LIMPIEZA;
                    break;
                case "Perfumer칤a":
                    categoria = Categoria.PERFUMERIA;
                    break;
                default:
                    categoria = null;
                    break;
            }

            // Buscar el producto en la lista y actualizar sus datos
            for (Producto producto : listaProductos) {
                if (producto.getCodigo() == codigo) {
                    producto.setDescripcion(descripcion);
                    producto.setPrecio(precio);
                    producto.setRubro(categoria);
                    producto.setStock(stock);
                    break;
                }
            }

            // Notificar al usuario y limpiar campos
            JOptionPane.showMessageDialog(this, "Producto editado correctamente.");
            limpiarCampos();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error al editar producto. Verifique los datos ingresados.");
        }
        for (Producto produ : listaProductos) {
            System.out.println(produ.getDescripcion() + " " + produ.getCodigo() + " - " + produ.getRubro());
        }
    }

    private void limpiarCampos() {
        jTCodigo.setText("");
        jTDescripcion.setText("");
        jTPrecio.setText("");
        jTStock.setText("");
        cbRubro.setSelectedIndex(0);
    }//GEN-LAST:event_btnGuardarActionPerformed
//    private void agregarProducto(Producto producto) {
//
//        listaProductos.add(producto);
//
//    }
//
//    private void mostrarProductos(Producto producto) {
//
//        for (Producto produ : listaProductos) {
//            System.out.println(produ.getDescripcion() + " " + produ.getCodigo() + " - " + produ.getRubro());
//
//        }
//
//    }
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try {
            int codigoEliminar = Integer.parseInt(jTCodigo.getText());
            /*if (jTCodigo.getText().equalsIgnoreCase("")) {
                JOptionPane.showMessageDialog(this, "El campo del c칩digo no puede estar vac칤o!");
            }*/
            String desc = jTDescripcion.getText();
            // Buscar y eliminar el producto del TreeSet
            Producto productoEliminar = buscarProductoPorCodigo(codigoEliminar, desc);
            if (productoEliminar != null) {
                int opcion = JOptionPane.showConfirmDialog(this, "Confirma Eliminaci칩n S/N", "Confirmaci칩n", JOptionPane.YES_NO_OPTION);
                if (opcion == JOptionPane.YES_OPTION) {
                    listaProductos.remove(productoEliminar);
                    System.out.println("Producto eliminado con 칠xito." + " - " + productoEliminar.getDescripcion());

                    JOptionPane.showMessageDialog(this, "Producto eliminado con 칠xito");
                    limpiarCampos();
                    // aux = null;
                }

            } else {
                System.out.println("Producto no encontrado.");
                JOptionPane.showMessageDialog(this, "Producto no encontrado");
            }

        } catch (Exception e) {
            //JOptionPane.showMessageDialog(this, "El campo del c칩digo no puede estar vac칤o!");
            JOptionPane.showMessageDialog(this, "El c칩digo debe ser num칠rico" + " - " + e.getMessage());
        }
    }

    private Producto buscarProductoPorCodigo(int codigo, String desc) {
        for (Producto producto : listaProductos) {
            if (producto.getCodigo() == codigo) {
                return producto;
            }
        }
        return null; // Producto no encontrado

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void jLLupaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLLupaMouseClicked
        try {
            int codigoABuscar = Integer.parseInt(jTCodigo.getText());
            Producto productoEncontrado = buscarProductoPorCodigo(codigoABuscar);
            if (productoEncontrado != null) {
                jTDescripcion.setText(productoEncontrado.getDescripcion());
                jTPrecio.setText(String.valueOf(productoEncontrado.getPrecio()));
                jTStock.setText(String.valueOf(productoEncontrado.getStock()));

                // Establecer el rubro del producto encontrado en el ComboBox
                switch (productoEncontrado.getRubro()) {
                    case COMESTIBLE:
                        cbRubro.setSelectedItem("Comestible");
                        break;
                    case LIMPIEZA:
                        cbRubro.setSelectedItem("Limpieza");
                        break;
                    case PERFUMERIA:
                        cbRubro.setSelectedItem("Perfumer칤a");
                        break;
                    default:
                        cbRubro.setSelectedIndex(0); // Seleccionar el primer elemento por defecto
                        break;
                }
            } else {
                JOptionPane.showMessageDialog(this, "Producto no encontrado");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Ingrese un c칩digo v치lido");
        }
    }

    private Producto buscarProductoPorCodigo(int codigoABuscar) {
        for (Producto producto : listaProductos) {
            if (producto.getCodigo() == codigoABuscar) {
                return producto;
            }
        }
        return null; // Producto no encontrado

    }//GEN-LAST:event_jLLupaMouseClicked

    private void jTPrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTPrecioKeyTyped
        // TODO add your handling code here:
        eventoTxtGradosSoloNumeros(evt);
    }//GEN-LAST:event_jTPrecioKeyTyped

    private void jTStockKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTStockKeyTyped
        // TODO add your handling code here:
        eventoTxtGradosSoloNumeros(evt);
    }//GEN-LAST:event_jTStockKeyTyped

    private void jTCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTCodigoKeyTyped
        // TODO add your handling code here:
        eventoTxtGradosSoloNumeros(evt);
    }//GEN-LAST:event_jTCodigoKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> cbRubro;
    private javax.swing.JLabel jLLupa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTCodigo;
    private javax.swing.JTextField jTDescripcion;
    private javax.swing.JTextField jTPrecio;
    private javax.swing.JTextField jTStock;
    // End of variables declaration//GEN-END:variables

    public void cargarCombo() {
        cbRubro.addItem("Seleccione rubro");
        cbRubro.addItem("Comestible");
        cbRubro.addItem("Limpieza");
        cbRubro.addItem("Perfumer칤a");
    }

    public static void eventoTxtGradosSoloNumeros(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != KeyEvent.VK_BACK_SPACE && c != KeyEvent.VK_DELETE && c != '.') {
            evt.consume();
        }
    }
}
